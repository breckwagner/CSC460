Instructions
NO ARDUINO LIBRARY CODE IS ALLOWED!

This exercise is about learning how to implement context-switching in AVR differently from Exercise 7.

Download a copy of "Active Kernel Approach to RTOS Design". Again, this piece of code has the same "17-bit" address problem. Fix it as you have done in Exercise 7.

Modify "active.zip" so that it works. Create two tasks so that they can context-switch back and forth voluntarily; when one yields, the other runs, and so forth. Now, add your solution from Exercise 6 (i.e., a timer interrupt handler) into your code, so that the tasks switch involuntarily, once every 10 mSec (100 Hz). This will be a rudimentary round-robin scheduler.

Your solution is quite similar to Exercise 7, except that task switching is going thro' a tiny kernel. If you structure your code properly, you should be able to visualize the task execution using a logic analyzer.

Submit your C code, screen captures, and observations in the submission box. 
